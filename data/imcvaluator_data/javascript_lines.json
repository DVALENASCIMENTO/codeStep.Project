[
    {
        "code": "const resultado = document.querySelector('#resultado')",
        "explanation": "Seleciona o elemento HTML com o id 'resultado' e o armazena na constante 'resultado'. Este elemento é onde o resultado do cálculo do IMC será exibido."
    },
    {
        "code": "const altura = document.querySelector('#altura')",
        "explanation": "Seleciona o elemento HTML com o id 'altura' e o armazena na constante 'altura'. Este elemento é o campo de entrada onde o usuário insere a altura."
    },
    {
        "code": "const peso = document.querySelector('#peso')",
        "explanation": "Seleciona o elemento HTML com o id 'peso' e o armazena na constante 'peso'. Este elemento é o campo de entrada onde o usuário insere o peso."
    },
    {
        "code": "const calcIMC = () => {",
        "explanation": "Define uma função chamada 'calcIMC' que será usada para calcular o Índice de Massa Corporal (IMC) com base nos valores inseridos pelo usuário."
    },
    {
        "code": "if (altura.value !== '' && peso.value !== '') {",
        "explanation": "Verifica se os campos de altura e peso não estão vazios. Se ambos tiverem valores, o código dentro do bloco if será executado."
    },
    {
        "code": "const imc = (peso.value / (altura.value * altura.value)).toFixed(2)",
        "explanation": "Calcula o IMC usando a fórmula peso dividido pela altura ao quadrado. O resultado é arredondado para duas casas decimais e armazenado na constante 'imc'."
    },
    {
        "code": "let classification = ''",
        "explanation": "Inicializa uma variável 'classification' como uma string vazia. Esta variável será usada para armazenar a classificação do IMC."
    },
    {
        "code": "let pesoIdeal = 0",
        "explanation": "Inicializa a variável 'pesoIdeal' com o valor 0. Esta variável será usada para armazenar o peso ideal calculado."
    },
    {
        "code": "if (altura.value !== '') {",
        "explanation": "Verifica novamente se o campo de altura não está vazio antes de calcular o peso ideal."
    },
    {
        "code": "const alturaMetros = altura.value",
        "explanation": "Armazena o valor da altura em metros na constante 'alturaMetros'."
    },
    {
        "code": "const alturaCentimetros = alturaMetros * 100",
        "explanation": "Converte a altura de metros para centímetros e armazena o valor na constante 'alturaCentimetros'."
    },
    {
        "code": "pesoIdeal = alturaCentimetros - 100 - ((alturaCentimetros - 150) / 4)",
        "explanation": "Calcula o peso ideal usando uma fórmula baseada na altura em centímetros. O resultado é armazenado na variável 'pesoIdeal'."
    },
    {
        "code": "if (imc < 18.5) {",
        "explanation": "Verifica se o IMC é menor que 18,5. Se for, o usuário está classificado como 'Abaixo do peso'."
    },
    {
        "code": "classification = 'Abaixo do peso'",
        "explanation": "Define a classificação como 'Abaixo do peso' se o IMC for menor que 18,5."
    },
    {
        "code": "const kgGanhar = pesoIdeal - peso.value",
        "explanation": "Calcula a quantidade de peso que o usuário precisa ganhar para atingir o peso ideal e armazena o valor na constante 'kgGanhar'."
    },
    {
        "code": "resultado.innerHTML = `IMC: ${imc} (${classification}). Ganhe ${kgGanhar.toFixed(2)} kg para atingir o peso ideal.`",
        "explanation": "Atualiza o conteúdo do elemento 'resultado' com uma mensagem formatada que inclui o IMC, a classificação e a quantidade de peso a ser ganho para atingir o peso ideal."
    },
    {
        "code": "} else if (imc < 25) {",
        "explanation": "Verifica se o IMC é menor que 25. Se for, o usuário está classificado como 'Peso normal'."
    },
    {
        "code": "classification = 'Peso normal'",
        "explanation": "Define a classificação como 'Peso normal' se o IMC estiver entre 18,5 e 25."
    },
    {
        "code": "resultado.innerHTML = `IMC: ${imc} (${classification})`",
        "explanation": "Atualiza o conteúdo do elemento 'resultado' com uma mensagem formatada que inclui o IMC e a classificação 'Peso normal'."
    },
    {
        "code": "} else if (imc < 30) {",
        "explanation": "Verifica se o IMC é menor que 30. Se for, o usuário está classificado como 'Acima do peso'."
    },
    {
        "code": "classification = 'Acima do peso'",
        "explanation": "Define a classificação como 'Acima do peso' se o IMC estiver entre 25 e 30."
    },
    {
        "code": "const kgPerder = peso.value - pesoIdeal",
        "explanation": "Calcula a quantidade de peso que o usuário precisa perder para atingir o peso ideal e armazena o valor na constante 'kgPerder'."
    },
    {
        "code": "resultado.innerHTML = `IMC: ${imc} (${classification}). Perca ${kgPerder.toFixed(2)} kg para atingir o peso ideal.`",
        "explanation": "Atualiza o conteúdo do elemento 'resultado' com uma mensagem formatada que inclui o IMC, a classificação e a quantidade de peso a ser perdido para atingir o peso ideal."
    },
    {
        "code": "} else if (imc < 35) {",
        "explanation": "Verifica se o IMC é menor que 35. Se for, o usuário está classificado como 'Obesidade Grau I'."
    },
    {
        "code": "classification = 'Obesidade Grau I'",
        "explanation": "Define a classificação como 'Obesidade Grau I' se o IMC estiver entre 30 e 35."
    },
    {
        "code": "} else if (imc < 41) {",
        "explanation": "Verifica se o IMC é menor que 41. Se for, o usuário está classificado como 'Obesidade Grau II'."
    },
    {
        "code": "classification = 'Obesidade Grau II'",
        "explanation": "Define a classificação como 'Obesidade Grau II' se o IMC estiver entre 35 e 41."
    },
    {
        "code": "} else {",
        "explanation": "Se o IMC for 41 ou mais, o usuário está classificado como 'Obesidade Grau III'."
    },
    {
        "code": "classification = 'Obesidade Grau III'",
        "explanation": "Define a classificação como 'Obesidade Grau III' se o IMC for 41 ou mais."
    },
    {
        "code": "const kgPerder = peso.value - pesoIdeal",
        "explanation": "Calcula a quantidade de peso que o usuário precisa perder para atingir o peso ideal e armazena o valor na constante 'kgPerder'."
    },
    {
        "code": "resultado.innerHTML = `IMC: ${imc} (${classification}). Perca ${kgPerder.toFixed(2)} kg para atingir o peso ideal.`",
        "explanation": "Atualiza o conteúdo do elemento 'resultado' com uma mensagem formatada que inclui o IMC, a classificação e a quantidade de peso a ser perdido para atingir o peso ideal."
    },
    {
        "code": "} else {",
        "explanation": "Bloco else para tratar o caso em que pelo menos um dos campos de altura ou peso está vazio."
    },
    {
        "code": "resultado.innerHTML = 'Preencha os campos'",
        "explanation": "Atualiza o conteúdo do elemento 'resultado' com a mensagem 'Preencha os campos' se algum dos campos de entrada estiver vazio."
    },
    {
        "code": "}",
        "explanation": "Fecha a função 'calcIMC'."
    }
]
